export const PROJECT_VERSION = '0.1.6.2';

const DELIMETER = '__';

export const SUBREDDIT_COMMENT_COUNTS = 'SUBREDDIT_COMMENT_COUNTS';
export const SUBREDDIT_POST_COUNTS = 'SUBREDDIT_POST_COUNTS';
export const TOTAL_MARKET_CAP = 'TOTAL_MARKET_CAP';
export const TV_CANDLE_CHART = 'TV_CANDLE_CHART';
export const TV_MARKET_OVERVIEW = 'TV_MARKET_OVERVIEW';

export const ITEM_KEY_WHITELIST = [
  SUBREDDIT_COMMENT_COUNTS,
  SUBREDDIT_POST_COUNTS,
  'TOKEN-PRICE',
  TOTAL_MARKET_CAP,
  TV_CANDLE_CHART,
  TV_MARKET_OVERVIEW,
];

// Array of dashboard page objects.
export const DEFAULT_PAGES_OBJECTS = [
  {
    dashboardItems: [
      {
        "id":"3","w":6,"h":4,"x":0,"y":0,"static":false,"identifier":"TV_CANDLE_CHART__BITSTAMP:BTCUSD"
      },
      {
        "id":"6","w":6,"h":4,"x":0,"y":4,"static":false,"identifier":"TV_CANDLE_CHART__BITSTAMP:ETHUSD"
      },
      {
        "id":"7","w":3,"h":8,"x":6,"y":0,"static":false,"identifier":"TV_MARKET_OVERVIEW__Default"
      },
      {
        "id":"9","w":3,"h":3,"x":6,"y":8,"static":false,"identifier":"SUBREDDIT_COMMENT_COUNTS__Bitcoin"
      },
      {
        "id":"10","w":3,"h":3,"x":0,"y":8,"static":false,"identifier":"TOTAL_MARKET_CAP__Default"
      },
      {
        "id":"11","w":3,"h":3,"x":3,"y":8,"static":false,"identifier":"SUBREDDIT_POST_COUNTS__Bitcoin"
      }
    ],
    "index":0,
    "name":"Tab 1",
  },
  {
    dashboardItems: [
    ],
    index: 1,
    name: 'Tab 2',
  },
  {
    dashboardItems: [
    ],
    index: 2,
    name: 'Tab 3',
  },
  {
    dashboardItems: [
    ],
    index: 3,
    name: 'Tab 4',
  },
];

// Keys should be all lowercase.
export const DEFAULT_ITEM_OBJECTS_BY_SUBREDDIT = {
  monero: [
    {
      id: '1',
      identifier: generateIdentifier(TV_CANDLE_CHART, 'KRAKEN:XMRUSD'),
      w: 4,
      h: 4,
      x: 0,
      y: 0,
    },
    {
      id: '2',
      identifier: generateIdentifier(SUBREDDIT_POST_COUNTS, 'Monero'),
      w: 4,
      h: 4,
      x: 4,
      y: 0,
    },
    {
      id: '3',
      identifier: generateIdentifier(TV_CANDLE_CHART, 'BITTREX:XMRBTC'),
      w: 4,
      h: 4,
      x: 0,
      y: 4,
    },
    {
      id: '4',
      identifier: generateIdentifier(SUBREDDIT_COMMENT_COUNTS, 'Monero'),
      w: 4,
      h: 4,
      x: 4,
      y: 4,
    },
  ],
};

export const ITEM_KEY_TO_LABELS = {
  [TV_CANDLE_CHART]: 'Candle chart',
  [TV_MARKET_OVERVIEW]: 'Market overview',
  [SUBREDDIT_POST_COUNTS]: 'Subreddit posts chart',
  [SUBREDDIT_COMMENT_COUNTS]: 'Subreddit comments chart',
  [TOTAL_MARKET_CAP]: 'Total market cap chart',
};

// These array values should be in user-facing order.
// The order does affect user-facing order.
const SUBREDDITS_IN_USER_FACING_ORDER = [
  'Bitcoin',
  'ethereum',
  'litecoin',
  'btc',
  'Ripple',
  'Iota',
  'NEO',
  'Lisk',
  'altcoin',
  'CryptoCurrency',
  'CryptoMarkets',
  'Monero',
  'Bitcoincash',
  'steemit',
  'SubstratumNetwork',
  'dogecoin',
  'Raiblocks',
  'RequestNetwork',
  'Vertcoin',
  'Electroneum',
  'Groestlcoin',
  'gridcoin',
  'icon',
];

export const ITEM_KEY_TO_VALUES = {
  [SUBREDDIT_COMMENT_COUNTS]: SUBREDDITS_IN_USER_FACING_ORDER,
  [SUBREDDIT_POST_COUNTS]: SUBREDDITS_IN_USER_FACING_ORDER,
  [TOTAL_MARKET_CAP]: [
    'Default',
  ],
  [TV_CANDLE_CHART]: [
    'BINANCE:ADABTC',
    'BINANCE:ADAETH',
    'BINANCE:ADXBNB',
    'BINANCE:ADXBTC',
    'BINANCE:ADXETH',
    'BINANCE:AIONBNB',
    'BINANCE:AIONBTC',
    'BINANCE:AIONETH',
    'BINANCE:AMBBNB',
    'BINANCE:AMBBTC',
    'BINANCE:AMBETH',
    'BINANCE:ARKBTC',
    'BINANCE:ARKETH',
    'BINANCE:ARNBTC',
    'BINANCE:ARNETH',
    'BINANCE:ASTBTC',
    'BINANCE:ASTETH',
    'BINANCE:BATBNB',
    'BINANCE:BATBTC',
    'BINANCE:BATETH',
    'BINANCE:BCDBTC',
    'BINANCE:BCDETH',
    'BINANCE:BCPTBNB',
    'BINANCE:BCPTBTC',
    'BINANCE:BCPTETH',
    'BINANCE:BNBBTC',
    'BINANCE:BNBETH',
    'BINANCE:BNBUSDT',
    'BINANCE:BNTBTC',
    'BINANCE:BNTETH',
    'BINANCE:BQXBTC',
    'BINANCE:BQXETH',
    'BINANCE:BRDBNB',
    'BINANCE:BRDBTC',
    'BINANCE:BRDETH',
    'BINANCE:BTGBTC',
    'BINANCE:BTGETH',
    'BINANCE:BTSBNB',
    'BINANCE:BTSBTC',
    'BINANCE:BTSETH',
    'BINANCE:CDTBTC',
    'BINANCE:CDTETH',
    'BINANCE:CMTBNB',
    'BINANCE:CMTBTC',
    'BINANCE:CMTETH',
    'BINANCE:CNDBNB',
    'BINANCE:CNDBTC',
    'BINANCE:CNDETH',
    'BINANCE:CTRBTC',
    'BINANCE:CTRETH',
    'BINANCE:DGDBTC',
    'BINANCE:DGDETH',
    'BINANCE:DLTBNB',
    'BINANCE:DLTBTC',
    'BINANCE:DLTETH',
    'BINANCE:DNTBTC',
    'BINANCE:DNTETH',
    'BINANCE:EDOBTC',
    'BINANCE:EDOETH',
    'BINANCE:ELFBTC',
    'BINANCE:ELFETH',
    'BINANCE:ENGBTC',
    'BINANCE:ENGETH',
    'BINANCE:ENJBTC',
    'BINANCE:ENJETH',
    'BINANCE:EOSBTC',
    'BINANCE:ETCBTC',
    'BINANCE:EVXBTC',
    'BINANCE:EVXETH',
    'BINANCE:FUELBTC',
    'BINANCE:FUELETH',
    'BINANCE:FUNBTC',
    'BINANCE:GASBTC',
    'BINANCE:GTOBNB',
    'BINANCE:GTOBTC',
    'BINANCE:GTOETH',
    'BINANCE:GVTBTC',
    'BINANCE:GVTETH',
    'BINANCE:GXSBTC',
    'BINANCE:GXSETH',
    'BINANCE:HSRBTC',
    'BINANCE:HSRETH',
    'BINANCE:ICNBTC',
    'BINANCE:ICXBNB',
    'BINANCE:ICXBTC',
    'BINANCE:ICXETH',
    'BINANCE:IOTABNB',
    'BINANCE:IOTAETH',
    'BINANCE:KMDBTC',
    'BINANCE:KMDETH',
    'BINANCE:KNCBTC',
    'BINANCE:KNCETH',
    'BINANCE:LENDBTC',
    'BINANCE:LENDETH',
    'BINANCE:LINKBTC',
    'BINANCE:LINKETH',
    'BINANCE:LRCBTC',
    'BINANCE:LRCETH',
    'BINANCE:LSKBNB',
    'BINANCE:LSKBTC',
    'BINANCE:LSKETH',
    'BINANCE:LTCBNB',
    'BINANCE:LTCETH',
    'BINANCE:LUNBTC',
    'BINANCE:LUNETH',
    'BINANCE:MANABTC',
    'BINANCE:MANAETH',
    'BINANCE:MCOBNB',
    'BINANCE:MCOBTC',
    'BINANCE:MCOETH',
    'BINANCE:MDABTC',
    'BINANCE:MDAETH',
    'BINANCE:MODBTC',
    'BINANCE:MODETH',
    'BINANCE:MTHBTC',
    'BINANCE:MTHETH',
    'BINANCE:MTLBTC',
    'BINANCE:MTLETH',
    'BINANCE:NAVBNB',
    'BINANCE:NAVBTC',
    'BINANCE:NAVETH',
    'BINANCE:NEBLBNB',
    'BINANCE:NEBLBTC',
    'BINANCE:NEBLETH',
    'BINANCE:NEOBTC',
    'BINANCE:NULSBNB',
    'BINANCE:NULSBTC',
    'BINANCE:NULSETH',
    'BINANCE:OAXBTC',
    'BINANCE:OAXETH',
    'BINANCE:OMGBTC',
    'BINANCE:OMGETH',
    'BINANCE:OSTBNB',
    'BINANCE:OSTBTC',
    'BINANCE:OSTETH',
    'BINANCE:POEBTC',
    'BINANCE:POEETH',
    'BINANCE:POWRBNB',
    'BINANCE:POWRBTC',
    'BINANCE:POWRETH',
    'BINANCE:PPTBTC',
    'BINANCE:PPTETH',
    'BINANCE:QSPBNB',
    'BINANCE:QSPBTC',
    'BINANCE:QSPETH',
    'BINANCE:QTUMBTC',
    'BINANCE:QTUMETH',
    'BINANCE:RCNBNB',
    'BINANCE:RCNBTC',
    'BINANCE:RCNETH',
    'BINANCE:RDNBNB',
    'BINANCE:RDNBTC',
    'BINANCE:RDNETH',
    'BINANCE:REQBTC',
    'BINANCE:REQETH',
    'BINANCE:SALTBTC',
    'BINANCE:SALTETH',
    'BINANCE:SNGLSBTC',
    'BINANCE:SNGLSETH',
    'BINANCE:SNMBTC',
    'BINANCE:SNMETH',
    'BINANCE:SNTBTC',
    'BINANCE:SNTETH',
    'BINANCE:STORJBTC',
    'BINANCE:STORJETH',
    'BINANCE:STRATBTC',
    'BINANCE:SUBBTC',
    'BINANCE:SUBETH',
    'BINANCE:TNBBTC',
    'BINANCE:TNBETH',
    'BINANCE:TNTBTC',
    'BINANCE:TNTETH',
    'BINANCE:TRIGBNB',
    'BINANCE:TRIGBTC',
    'BINANCE:TRIGETH',
    'BINANCE:VENBNB',
    'BINANCE:VENBTC',
    'BINANCE:VENETH',
    'BINANCE:VIBBTC',
    'BINANCE:VIBETH',
    'BINANCE:WABIBNB',
    'BINANCE:WABIBTC',
    'BINANCE:WABIETH',
    'BINANCE:WAVESBTC',
    'BINANCE:WAVESETH',
    'BINANCE:WINGSBTC',
    'BINANCE:WINGSETH',
    'BINANCE:WTCBNB',
    'BINANCE:WTCBTC',
    'BINANCE:WTCETH',
    'BINANCE:XLMBNB',
    'BINANCE:XLMBTC',
    'BINANCE:XLMETH',
    'BINANCE:XMRBTC',
    'BINANCE:XMRETH',
    'BINANCE:XRPBTC',
    'BINANCE:XVGBTC',
    'BINANCE:XVGETH',
    'BINANCE:XZCBNB',
    'BINANCE:XZCBTC',
    'BINANCE:XZCETH',
    'BINANCE:YOYOBNB',
    'BINANCE:YOYOBTC',
    'BINANCE:ZECBTC',
    'BINANCE:ZRXBTC',
    'BINANCE:ZRXETH',
    'BITFINEX:BCHBTC',
    'BITFINEX:BCHETH',
    'BITFINEX:BTCEUR',
    'BITFINEX:BTCUSD',
    'BITFINEX:BTGUSD',
    'BITFINEX:EDOBTC',
    'BITFINEX:EDOUSD',
    'BITFINEX:EOSBTC',
    'BITFINEX:EOSETH',
    'BITFINEX:EOSUSD',
    'BITFINEX:ETHUSD',
    'BITFINEX:IOTBTC',
    'BITFINEX:IOTETH',
    'BITFINEX:IOTEUR',
    'BITFINEX:IOTUSD',
    'BITFINEX:LTCUSD',
    'BITFINEX:NEOBTC',
    'BITFINEX:OMGUSD',
    'BITFINEX:QTMUSD',
    'BITFINEX:SNTBTC',
    'BITFINEX:SNTETH',
    'BITFINEX:SNTUSD',
    'BITFINEX:XMRBTC',
    'BITFINEX:XMRUSD',
    'BITFINEX:YYWBTC',
    'BITFINEX:YYWUSD',
    'BITFINEX:ZECBTC',
    'BITFINEX:ZECUSD',
    'BITFLYER:BTCJPY',
    'BITMEX:BCHXBT',
    'BITSO:BTCMXN',
    'BITSO:ETHMXN',
    'BITSO:XRPMXN',
    'BITSTAMP:BCHBTC',
    'BITSTAMP:BCHUSD',
    'BITSTAMP:BTCEUR',
    'BITSTAMP:BTCUSD',
    'BITSTAMP:ETHBTC',
    'BITSTAMP:ETHEUR',
    'BITSTAMP:ETHUSD',
    'BITSTAMP:LTCBTC',
    'BITSTAMP:LTCUSD',
    'BITSTAMP:XRPBTC',
    'BITSTAMP:XRPUSD',
    'BITTREX:ADABTC',
    'BITTREX:ADAETH',
    'BITTREX:ADAUSDT',
    'BITTREX:ADXBTC',
    'BITTREX:ADXETH',
    'BITTREX:ADXUSD',
    'BITTREX:ARKBTC',
    'BITTREX:ARKUSD',
    'BITTREX:BATBTC',
    'BITTREX:BATUSD',
    'BITTREX:BNTBTC',
    'BITTREX:BNTETH',
    'BITTREX:BNTUSD',
    'BITTREX:BTGBTC',
    'BITTREX:BTGUSDT',
    'BITTREX:BTSUSD',
    'BITTREX:DASHBTC',
    'BITTREX:DASHETH',
    'BITTREX:DGDBTC',
    'BITTREX:DGDUSD',
    'BITTREX:DNTBTC',
    'BITTREX:DOGEBTC',
    'BITTREX:DOGEUSD',
    'BITTREX:ENGBTC',
    'BITTREX:ENGETH',
    'BITTREX:ETHUSDT',
    'BITTREX:FUNBTC',
    'BITTREX:FUNUSD',
    'BITTREX:GRCBTC',
    'BITTREX:GRCUSD',
    'BITTREX:KMDBTC',
    'BITTREX:KMDUSD',
    'BITTREX:LSKBTC',
    'BITTREX:LSKUSD',
    'BITTREX:LUNBTC',
    'BITTREX:LUNETH',
    'BITTREX:LUNUSD',
    'BITTREX:MCOBTC',
    'BITTREX:MCOUSD',
    'BITTREX:NAVBTC',
    'BITTREX:NEOBTC',
    'BITTREX:NEOUSD',
    'BITTREX:OMGBTC',
    'BITTREX:OMGUSD',
    'BITTREX:POWRBTC',
    'BITTREX:QTUMBTC',
    'BITTREX:QTUMETH',
    'BITTREX:QTUMUSD',
    'BITTREX:RCNBTC',
    'BITTREX:RCNETH',
    'BITTREX:SALTBTC',
    'BITTREX:SALTETH',
    'BITTREX:SBDBTC',
    'BITTREX:SBDUSD',
    'BITTREX:SNGLSUSD',
    'BITTREX:SNTBTC',
    'BITTREX:SNTETH',
    'BITTREX:SNTUSD',
    'BITTREX:STEEMBTC',
    'BITTREX:STEEMUSD',
    'BITTREX:STORJBTC',
    'BITTREX:STRATBTC',
    'BITTREX:STRATUSD',
    'BITTREX:TRIGBTC',
    'BITTREX:TRIGUSD',
    'BITTREX:VIBBTC',
    'BITTREX:VIBETH',
    'BITTREX:VTCBTC',
    'BITTREX:WAVESBTC',
    'BITTREX:WAVESUSD',
    'BITTREX:WINGSBTC',
    'BITTREX:WINGSUSD',
    'BITTREX:XEMBTC',
    'BITTREX:XEMUSD',
    'BITTREX:XLMBTC',
    'BITTREX:XLMETH',
    'BITTREX:XLMUSD',
    'BITTREX:XMRBTC',
    'BITTREX:XMRUSD',
    'BITTREX:XVGBTC',
    'BITTREX:XVGUSD',
    'BITTREX:XZCBTC',
    'BITTREX:XZCUSD',
    'BITTREX:ZECBTC',
    'BITTREX:ZECUSD',
    'BTCE:DSHRUR',
    'BTCE:USDRUR',
    'BXTH:BTCTHB',
    'BXTH:ETHTHB',
    'COINBASE:BCHUSD',
    'COINBASE:BTCGBP',
    'COINBASE:BTCUSD',
    'COINBASE:ETHEUR',
    'COINBASE:ETHUSD',
    'COINBASE:LTCEUR',
    'COINBASE:LTCUSD',
    'COINFLOOR:BTCGBP',
    'HITBTC:BTCUSD',
    'HITBTC:DNTBTC',
    'HITBTC:DOGEUSD',
    'HITBTC:XEMBTC',
    'HITBTC:XEMUSD',
    'KORBIT:BCHKRW',
    'KORBIT:BTCKRW',
    'KORBIT:BTGKRW',
    'KORBIT:ETHKRW',
    'KORBIT:XRPKRW',
    'KRAKEN:BCHEUR',
    'KRAKEN:DASHEUR',
    'KRAKEN:DASHUSD',
    'KRAKEN:DASHXBT',
    'KRAKEN:EOSXBT',
    'KRAKEN:ETCEUR',
    'KRAKEN:ETCUSD',
    'KRAKEN:ETCXBT',
    'KRAKEN:ETHEUR',
    'KRAKEN:ETHJPY',
    'KRAKEN:ETHUSD',
    'KRAKEN:ETHXBT',
    'KRAKEN:ICNUSD',
    'KRAKEN:LTCEUR',
    'KRAKEN:LTCUSD',
    'KRAKEN:USDTUSD',
    'KRAKEN:XMRUSD',
    'KRAKEN:XMRXBT',
    'KRAKEN:XRPEUR',
    'KRAKEN:XRPUSD',
    'KRAKEN:XRPXBT',
    'KRAKEN:ZECEUR',
    'KRAKEN:ZECXBT',
    'MERCADO:BCHBRL',
    'MERCADO:BTCBRL',
    'MERCADO:LTCBRL',
    'POLONIEX:BCHUSDT',
    'POLONIEX:BTMBTC',
    'POLONIEX:BTSBTC',
    'POLONIEX:BTSUSD',
    'POLONIEX:DASHBTC',
    'POLONIEX:DASHUSDT',
    'POLONIEX:GASBTC',
    'POLONIEX:GASETH',
    'POLONIEX:GRCBTC',
    'POLONIEX:LSKBTC',
    'POLONIEX:NAVBTC',
    'POLONIEX:SBDBTC',
    'POLONIEX:STEEMBTC',
    'POLONIEX:STEEMETH',
    'POLONIEX:STORJBTC',
    'POLONIEX:STRATBTC',
    'POLONIEX:USDTBTC',
    'POLONIEX:USDTUSD',
    'POLONIEX:USDTUSD',
    'POLONIEX:VTCBTC',
    'POLONIEX:XEMBTC',
    'POLONIEX:XRPUSDT',
    'THEROCKTRADING:BTCXRP',
    'WEX:BCHRUR',
    'WEX:DSHEUR',
    'WEX:ETHRUR',
    'WEX:LTCRUR',
    'WEX:USDRUR',
  ],
  [TV_MARKET_OVERVIEW]: [
    'Default',
  ],
};

// This map should be alphabetical for ease of development.
// The order does not affect user-facing order.
export const ITEM_VALUE_TO_LABELS = {
  'altcoin': 'r/Altcoin',
  'Bitcoin': 'r/Bitcoin',
  'Bitcoincash': 'r/Bitcoincash',
  'btc': 'r/BTC',
  'CryptoCurrency': 'r/Cryptocurrency',
  'CryptoMarkets': 'r/Cryptomarkets',
  'dogecoin': 'r/Dogecoin',
  'Electroneum': 'r/Electroneum',
  'ethereum': 'r/Ethereum',
  'gridcoin': 'r/gridcoin',
  'Groestlcoin': 'r/Groestlcoin',
  'icon': 'r/icon',
  'Iota': 'r/Iota',
  'litecoin': 'r/Litecoin',
  'Lisk': 'r/Lisk',
  'Monero': 'r/Monero',
  'NEO': 'r/NEO',
  'Raiblocks': 'r/Raiblocks',
  'RequestNetwork': 'r/RequestNetwork',
  'Ripple': 'r/Ripple',
  'steemit': 'r/steemit',
  'SubstratumNetwork': 'r/Substratumnetwork',
  'Vertcoin': 'r/Vertcoin',
};

// Returns an array of [next Y coordinate to use, next id to use].
export function computeDashboardFreeValues(dashboardItems)
{
  var maxId = 0;
  var maxY = 0;
  dashboardItems.forEach((dashboardItem) => {
    maxId = Math.max(maxId, parseInt(dashboardItem.id));
    maxY = Math.max(maxY, dashboardItem.y + dashboardItem.h);
  });
  return [maxY, String(maxId + 1)];
}

export function generateIdentifier(key, value)
{
  if (!ITEM_KEY_WHITELIST.includes(key))
  {
    console.log('Invalid identifier');
    return null;
  }
  else
  {
    return `${key}${DELIMETER}${value}`;
  }
}

export function isIdentifierValid(identifier)
{
  const arr = identifier.split(DELIMETER, 2);
  const identifierKey = arr[0];
  const identifierValue = arr[1];
  return ITEM_KEY_WHITELIST.includes(identifierKey);
}

export function parseIdentifer(identifier)
{
  if (!isIdentifierValid(identifier))
  {
    console.log('Invalid identifier');
    return null;
  }
  else
  {
    return identifier.split(DELIMETER, 2);
  }
}

export function parseIdentiferKey(identifier)
{
  const arr = parseIdentifer(identifier);
  if (arr)
  {
    return arr[0];
  }
  else
  {
    return null;
  }
}
